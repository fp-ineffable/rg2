% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rg2.R
\name{opt}
\alias{opt}
\title{G2Plot options}
\arguments{
\item{width}{optional number default: 400. width of the chart.}

\item{height}{optional number default: 400. height of the chart.}

\item{data}{required. Data frame for plot.}

\item{reflect}{Apply reflect transform to the coordinate of line plot. When reflect: 'y' is set, y-axis can be inverted; in the same way, you can set reflect: 'x' to invert x-axis, and invert x-axis and y-axis at the same time is also supported with 'c('x','y')'.}

\item{xField}{The name of the data field corresponding to the graph in the x direction, usually the field corresponding to the horizontal coordinate axis. For example, to see how many people are in different classes, the class field is the corresponding xField.}

\item{yField}{The name of the data field corresponding to the graph in the y direction, usually the field corresponding to the vertical coordinate axis. For example, to see the number of students in different classes, the number field is the corresponding yField.}

\item{colorField}{the name of the data field or color name or hex color code}

\item{groupField}{grouping field}

\item{seriesField}{grouping field}

\item{smooth}{TRUE/FALSE. whether the curve is smooth.}

\item{isStack}{to stack charts}

\item{isGroup}{to group charts}

\item{isPercent}{to percent charts}

\item{isRange}{to range charts}
}
\description{
opt param in rg2 is the PlotOptions for G2Plot.
You can construct an opt in two way:
\itemize{
\item use \code{list()} function in R base package.
\item use \code{opt_from_json()} from rg2 package.
\url{https://g2plot.antv.antgroup.com/en/api} for details
}
}
\examples{

opt = list(
  xField='drat',
  yField='wt',
  shape='circle',
  legend = list(position = 'top-left'),
  theme='dark' # default / dark
)
g2plot(mtcars, 'scatter', opt = opt)

opt = g2_opt_from_json('{"xField":"drat","yField":"wt", "shape":"circle","lengend":{"position":"top-left"},"theme":"dark"}')
g2plot(mtcars, 'scatter', opt = opt)

g2_scatter(mtcars, 'drat', 'wt') |>
  g2_opt(shape='circle', theme='dark') |>
  g2()


}
